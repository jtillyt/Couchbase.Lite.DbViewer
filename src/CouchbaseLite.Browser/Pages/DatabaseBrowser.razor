@page "/"

<PageTitle>Couchbase Lite Browser</PageTitle>

@using CouchbaseLite.Browser.Data
@inject DatabaseService DatabaseService

<MudPaper class="p-3 p-md-3" style="margin:10px">

	<EditForm Model="@DbProps" OnValidSubmit="@LoadDatabase">
		<div class="d-flex flex-grow-1 gap-4">

			<MudTextField @bind-Value="DbProps.DatabasePath" HelperText="Database Path" Class="d-flex flex-fill" style="margin-left:10px" />
			<MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit" style="margin:5px">(Re)Load Database</MudButton>
		</div>
	</EditForm>

</MudPaper>


<MudPaper style="margin:10px">
	<MudBlazor.MudList Clickable="true">
		@if (CurrentDb?.DatabaseDocuments != null)
		{
			@foreach (var group in CurrentDb.DatabaseDocumentGroups)
			{
				<MudListItem Text=@group.GroupName Icon="@Icons.Material.Filled.FormatListBulleted" Style="background: #efefef">
					<NestedList>

					@foreach (var doc in group.Documents)
					{
						<MudBlazor.MudListItem Text=@doc.DisplayName OnClick="@(()=>OnItemClicked(doc))">

						</MudBlazor.MudListItem>
					}
					</NestedList>
				</MudListItem>
			}
		}
		else
		{
			<MudText>No documents found</MudText>
		}
	</MudBlazor.MudList>
</MudPaper>

@code {


	public DatabaseViewerProperties? DbProps { get; set; }
	public LoadedDatabase? CurrentDb { get; set; }
	protected override async Task OnInitializedAsync()
	{
		DbProps = new DatabaseViewerProperties()
			{
				ViewerId = Guid.NewGuid()
			};
	}

	private void LoadDatabase()
	{
		CurrentDb = DatabaseService.LoadDb(DbProps);

		StateHasChanged();
	}

	private void OnItemClicked(DatabaseDocument databaseDocument)
	{

	}
}
